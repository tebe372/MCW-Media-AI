// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ContosoLearning.Web.Admin.VideoIndexer.Operations
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;

    /// <summary>
    /// Extension methods for OperationsClient.
    /// </summary>
    public static partial class OperationsClientExtensions
    {
            /// <summary>
            /// Get Accounts
            /// </summary>
            /// Get Accounts
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (User
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='generateAccessTokens'>
            /// Whether to generate an access token for each account. Possible values
            /// include: 'true', 'false'
            /// </param>
            /// <param name='allowEdit'>
            /// Whether the tokens have write permissions. Possible values include:
            /// 'true', 'false'
            /// </param>
            public static void GetAccounts(this IOperationsClient operations, string location, string accessToken, string generateAccessTokens = default(string), string allowEdit = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetAccountsAsync(location, accessToken, generateAccessTokens, allowEdit), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Accounts
            /// </summary>
            /// Get Accounts
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (User
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='generateAccessTokens'>
            /// Whether to generate an access token for each account. Possible values
            /// include: 'true', 'false'
            /// </param>
            /// <param name='allowEdit'>
            /// Whether the tokens have write permissions. Possible values include:
            /// 'true', 'false'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetAccountsAsync(this IOperationsClient operations, string location, string accessToken, string generateAccessTokens = default(string), string allowEdit = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetAccountsWithHttpMessagesAsync(location, accessToken, generateAccessTokens, allowEdit, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Account
            /// </summary>
            /// Get Account Details
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='includeUsage'>
            /// Whether to retrieve the usage information for the account. Possible values
            /// include: 'true', 'false'
            /// </param>
            /// <param name='includeAmsInfo'>
            /// Whether to retrieve the Azure Media Services instance information.
            /// Possible values include: 'true', 'false'
            /// </param>
            public static void GetAccount(this IOperationsClient operations, string location, string accountId, string accessToken, string includeUsage = default(string), string includeAmsInfo = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetAccountAsync(location, accountId, accessToken, includeUsage, includeAmsInfo), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Account
            /// </summary>
            /// Get Account Details
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='includeUsage'>
            /// Whether to retrieve the usage information for the account. Possible values
            /// include: 'true', 'false'
            /// </param>
            /// <param name='includeAmsInfo'>
            /// Whether to retrieve the Azure Media Services instance information.
            /// Possible values include: 'true', 'false'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetAccountAsync(this IOperationsClient operations, string location, string accountId, string accessToken, string includeUsage = default(string), string includeAmsInfo = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetAccountWithHttpMessagesAsync(location, accountId, accessToken, includeUsage, includeAmsInfo, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Video Index
            /// </summary>
            /// Get Video Index
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='language'>
            /// The language of the captions.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN. Possible values include: 'English', 'Spanish',
            /// 'Russian', 'Japanese', 'German', 'French', 'Portuguese', 'Italian',
            /// 'Chinese', 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR',
            /// 'de-DE', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH',
            /// 'Af-ZA', 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK',
            /// 'Nl-NL', 'En-FJ', 'En-GB', 'En-WS', 'Es-MX', 'Et-EE', 'Fi-FI', 'El-GR',
            /// 'Fr-HT', 'He-IL', 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV',
            /// 'Lt-LT', 'Mg-MG', 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO',
            /// 'Sr-Cyrl-RS', 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH',
            /// 'To-TO', 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant'
            /// </param>
            public static void GetVideoIndex(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string), string language = "English")
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetVideoIndexAsync(location, accountId, videoId, accessToken, language), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Video Index
            /// </summary>
            /// Get Video Index
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='language'>
            /// The language of the captions.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN. Possible values include: 'English', 'Spanish',
            /// 'Russian', 'Japanese', 'German', 'French', 'Portuguese', 'Italian',
            /// 'Chinese', 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR',
            /// 'de-DE', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH',
            /// 'Af-ZA', 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK',
            /// 'Nl-NL', 'En-FJ', 'En-GB', 'En-WS', 'Es-MX', 'Et-EE', 'Fi-FI', 'El-GR',
            /// 'Fr-HT', 'He-IL', 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV',
            /// 'Lt-LT', 'Mg-MG', 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO',
            /// 'Sr-Cyrl-RS', 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH',
            /// 'To-TO', 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetVideoIndexAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string), string language = "English", CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetVideoIndexWithHttpMessagesAsync(location, accountId, videoId, accessToken, language, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// List Videos
            /// </summary>
            /// Get a list of videos in the account
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='pageSize'>
            /// page size
            /// </param>
            /// <param name='skip'>
            /// The number of pages to skip
            /// </param>
            public static void ListVideos(this IOperationsClient operations, string location, string accountId, string accessToken, int? pageSize = default(int?), int? skip = default(int?))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).ListVideosAsync(location, accountId, accessToken, pageSize, skip), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// List Videos
            /// </summary>
            /// Get a list of videos in the account
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='pageSize'>
            /// page size
            /// </param>
            /// <param name='skip'>
            /// The number of pages to skip
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ListVideosAsync(this IOperationsClient operations, string location, string accountId, string accessToken, int? pageSize = default(int?), int? skip = default(int?), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.ListVideosWithHttpMessagesAsync(location, accountId, accessToken, pageSize, skip, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Upload Video
            /// </summary>
            /// Uploads the given video, starts indexing it and returns a new Video
            /// id.&lt;br&gt;
            /// The supported formats are listed
            /// &lt;a
            /// href=https://docs.microsoft.com/en-us/azure/media-services/media-services-media-encoder-standard-formats
            /// target="_blank"&gt; here&lt;/a&gt;
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account or
            /// Video with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='name'>
            /// The video name
            /// </param>
            /// <param name='description'>
            /// The video description.
            /// </param>
            /// <param name='partition'>
            /// A partition to partition videos by (used for searching a specific
            /// partition)
            /// </param>
            /// <param name='externalId'>
            /// An external id to associate with the video (can be searched for later).
            /// </param>
            /// <param name='callbackUrl'>
            /// A url to notify when indexing is completed.
            /// It should be a POST url and VideoIndexer will add 2 additional query
            /// string parameters to it: id and state.
            /// 
            /// For example, if the callback url is
            /// 'https://test.com/notifyme?projectName=MyProject', the notification will
            /// be sent with additional parameters to
            /// 'https://test.com/notifyme?projectName=MyProject&amp;id=1234abcd&amp;state=Processed'.
            /// </param>
            /// <param name='metadata'>
            /// Metadata to associate with the video (will be returned in queries).
            /// </param>
            /// <param name='language'>
            /// The language of the video, to be used when generating the transcript.
            /// Arabic: ar-EG, Chinese (Simplified): zh-Hans, English: en-US, French:
            /// fr-FR, German: de-DE, Italian: it-IT, Japanese: ja-JP, Portuguese: pt-BR,
            /// Russian: ru-RU, Spanish: es-ES, Korean: ko-KR, Hindi: hi-IN or auto for
            /// auto-detection. Possible values include: 'English', 'Spanish', 'Russian',
            /// 'Japanese', 'German', 'French', 'Portuguese', 'Italian', 'Chinese',
            /// 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR', 'de-DE',
            /// 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH', 'Af-ZA',
            /// 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK', 'Nl-NL',
            /// 'En-FJ', 'En-GB', 'En-WS', 'Es-MX', 'Et-EE', 'Fi-FI', 'El-GR', 'Fr-HT',
            /// 'He-IL', 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV', 'Lt-LT',
            /// 'Mg-MG', 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO',
            /// 'Sr-Cyrl-RS', 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH',
            /// 'To-TO', 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant', 'auto'
            /// </param>
            /// <param name='videoUrl'>
            /// A public url of the video/audio file (url encoded). If not specified, the
            /// file should be passed as a multipart/form body content.
            /// </param>
            /// <param name='fileName'>
            /// The uploaded file name.
            /// </param>
            /// <param name='indexingPreset'>
            /// The indexing preset to use
            /// (Default/AudioOnly/VideoOnly/DefaultWithNoiseReduction). Possible values
            /// include: 'Default', 'AudioOnly', 'VideoOnly', 'DefaultWithNoiseReduction'
            /// </param>
            /// <param name='streamingPreset'>
            /// The streaming preset to use
            /// (Default/SingleBitrate/AdaptiveBitrate/NoStreaming). Possible values
            /// include: 'Default', 'AdaptiveBitrate', 'NoStreaming', 'SingleBitrate'
            /// </param>
            /// <param name='linguisticModelId'>
            /// Linguistic model id as received by 'create linguistic model' call
            /// </param>
            /// <param name='privacy'>
            /// The video privacy (Private or Public). Possible values include: 'Private',
            /// 'Public'
            /// </param>
            /// <param name='externalUrl'>
            /// An external URL to associate with the video (can be retrieved later)
            /// </param>
            /// <param name='assetId'>
            /// Azure media services asset id. Used to index from existing assets in your
            /// connected Azure media services account. (Paid only)
            /// </param>
            /// <param name='priority'>
            /// Index priority (Low, Normal and High). Can be used in paid regions only.
            /// Possible values include: 'Low', 'Normal', 'High'
            /// </param>
            /// <param name='personModelId'>
            /// Faces will be identified against the provided person model.
            /// </param>
            /// <param name='brandsCategories'>
            /// List of brands categories delimited by comma. Video indexer will only take
            /// these categories in to account when indexing. If not specified all brands
            /// will be used.
            /// </param>
            /// <param name='body'>
            /// </param>
            public static void UploadVideo(this IOperationsClient operations, string location, string accountId, string accessToken, string name, string description = default(string), string partition = default(string), string externalId = default(string), string callbackUrl = default(string), string metadata = default(string), string language = default(string), string videoUrl = default(string), string fileName = default(string), string indexingPreset = default(string), string streamingPreset = "Default", string linguisticModelId = default(string), string privacy = default(string), string externalUrl = default(string), string assetId = default(string), string priority = default(string), string personModelId = default(string), string brandsCategories = default(string), object body = default(object))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).UploadVideoAsync(location, accountId, accessToken, name, description, partition, externalId, callbackUrl, metadata, language, videoUrl, fileName, indexingPreset, streamingPreset, linguisticModelId, privacy, externalUrl, assetId, priority, personModelId, brandsCategories, body), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Upload Video
            /// </summary>
            /// Uploads the given video, starts indexing it and returns a new Video
            /// id.&lt;br&gt;
            /// The supported formats are listed
            /// &lt;a
            /// href=https://docs.microsoft.com/en-us/azure/media-services/media-services-media-encoder-standard-formats
            /// target="_blank"&gt; here&lt;/a&gt;
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account or
            /// Video with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='name'>
            /// The video name
            /// </param>
            /// <param name='description'>
            /// The video description.
            /// </param>
            /// <param name='partition'>
            /// A partition to partition videos by (used for searching a specific
            /// partition)
            /// </param>
            /// <param name='externalId'>
            /// An external id to associate with the video (can be searched for later).
            /// </param>
            /// <param name='callbackUrl'>
            /// A url to notify when indexing is completed.
            /// It should be a POST url and VideoIndexer will add 2 additional query
            /// string parameters to it: id and state.
            /// 
            /// For example, if the callback url is
            /// 'https://test.com/notifyme?projectName=MyProject', the notification will
            /// be sent with additional parameters to
            /// 'https://test.com/notifyme?projectName=MyProject&amp;id=1234abcd&amp;state=Processed'.
            /// </param>
            /// <param name='metadata'>
            /// Metadata to associate with the video (will be returned in queries).
            /// </param>
            /// <param name='language'>
            /// The language of the video, to be used when generating the transcript.
            /// Arabic: ar-EG, Chinese (Simplified): zh-Hans, English: en-US, French:
            /// fr-FR, German: de-DE, Italian: it-IT, Japanese: ja-JP, Portuguese: pt-BR,
            /// Russian: ru-RU, Spanish: es-ES, Korean: ko-KR, Hindi: hi-IN or auto for
            /// auto-detection. Possible values include: 'English', 'Spanish', 'Russian',
            /// 'Japanese', 'German', 'French', 'Portuguese', 'Italian', 'Chinese',
            /// 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR', 'de-DE',
            /// 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH', 'Af-ZA',
            /// 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK', 'Nl-NL',
            /// 'En-FJ', 'En-GB', 'En-WS', 'Es-MX', 'Et-EE', 'Fi-FI', 'El-GR', 'Fr-HT',
            /// 'He-IL', 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV', 'Lt-LT',
            /// 'Mg-MG', 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO',
            /// 'Sr-Cyrl-RS', 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH',
            /// 'To-TO', 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant', 'auto'
            /// </param>
            /// <param name='videoUrl'>
            /// A public url of the video/audio file (url encoded). If not specified, the
            /// file should be passed as a multipart/form body content.
            /// </param>
            /// <param name='fileName'>
            /// The uploaded file name.
            /// </param>
            /// <param name='indexingPreset'>
            /// The indexing preset to use
            /// (Default/AudioOnly/VideoOnly/DefaultWithNoiseReduction). Possible values
            /// include: 'Default', 'AudioOnly', 'VideoOnly', 'DefaultWithNoiseReduction'
            /// </param>
            /// <param name='streamingPreset'>
            /// The streaming preset to use
            /// (Default/SingleBitrate/AdaptiveBitrate/NoStreaming). Possible values
            /// include: 'Default', 'AdaptiveBitrate', 'NoStreaming', 'SingleBitrate'
            /// </param>
            /// <param name='linguisticModelId'>
            /// Linguistic model id as received by 'create linguistic model' call
            /// </param>
            /// <param name='privacy'>
            /// The video privacy (Private or Public). Possible values include: 'Private',
            /// 'Public'
            /// </param>
            /// <param name='externalUrl'>
            /// An external URL to associate with the video (can be retrieved later)
            /// </param>
            /// <param name='assetId'>
            /// Azure media services asset id. Used to index from existing assets in your
            /// connected Azure media services account. (Paid only)
            /// </param>
            /// <param name='priority'>
            /// Index priority (Low, Normal and High). Can be used in paid regions only.
            /// Possible values include: 'Low', 'Normal', 'High'
            /// </param>
            /// <param name='personModelId'>
            /// Faces will be identified against the provided person model.
            /// </param>
            /// <param name='brandsCategories'>
            /// List of brands categories delimited by comma. Video indexer will only take
            /// these categories in to account when indexing. If not specified all brands
            /// will be used.
            /// </param>
            /// <param name='body'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UploadVideoAsync(this IOperationsClient operations, string location, string accountId, string accessToken, string name, string description = default(string), string partition = default(string), string externalId = default(string), string callbackUrl = default(string), string metadata = default(string), string language = default(string), string videoUrl = default(string), string fileName = default(string), string indexingPreset = default(string), string streamingPreset = "Default", string linguisticModelId = default(string), string privacy = default(string), string externalUrl = default(string), string assetId = default(string), string priority = default(string), string personModelId = default(string), string brandsCategories = default(string), object body = default(object), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.UploadVideoWithHttpMessagesAsync(location, accountId, accessToken, name, description, partition, externalId, callbackUrl, metadata, language, videoUrl, fileName, indexingPreset, streamingPreset, linguisticModelId, privacy, externalUrl, assetId, priority, personModelId, brandsCategories, body, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Search Videos
            /// </summary>
            /// Search videos in the specified account
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='query'>
            /// Free text to search for.
            /// </param>
            /// <param name='textScope'>
            /// The text scope to search in. Possible values include: 'Transcript', 'Ocr'
            /// </param>
            /// <param name='privacy'>
            /// A privacy level (Private, Organization, Public). Possible values include:
            /// 'Private', 'Public'
            /// </param>
            /// <param name='id'>
            /// A breakdown id to search for.
            /// </param>
            /// <param name='partition'>
            /// A partition to search for.
            /// </param>
            /// <param name='owner'>
            /// An owner to search for.
            /// </param>
            /// <param name='face'>
            /// A face to search for.
            /// </param>
            /// <param name='externalId'>
            /// An external id to search for (which was associated with the video at
            /// upload).
            /// </param>
            /// <param name='pageSize'>
            /// The number of results to return.
            /// </param>
            /// <param name='skip'>
            /// The number of results to skip (used for paging).
            /// </param>
            /// <param name='sourceLanguage'>
            /// Include only videos with that source language. You can specify multiple
            /// language parameters (e.g. $language=English&amp;language=French) to
            /// search multiple languages. Having no language parameter will search all
            /// languages.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN. Possible values include: 'English', 'Spanish',
            /// 'Russian', 'Japanese', 'German', 'French', 'Portuguese', 'Italian',
            /// 'Chinese', 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR',
            /// 'de-DE', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH',
            /// 'Af-ZA', 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK',
            /// 'Nl-NL', 'En-FJ', 'En-WS', 'Et-EE', 'Fi-FI', 'El-GR', 'Fr-HT', 'He-IL',
            /// 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV', 'Lt-LT', 'Mg-MG',
            /// 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO', 'Sr-Cyrl-RS',
            /// 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH', 'To-TO',
            /// 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant'
            /// </param>
            /// <param name='language'>
            /// The language to search in. You can specify multiple language parameters
            /// (e.g. $language=English&amp;language=French) to search multiple
            /// languages. Having no language parameter will search all languages.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN. Possible values include: 'English', 'Spanish',
            /// 'Russian', 'Japanese', 'German', 'French', 'Portuguese', 'Italian',
            /// 'Chinese', 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR',
            /// 'de-DE', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH',
            /// 'Af-ZA', 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK',
            /// 'Nl-NL', 'En-FJ', 'En-GB', 'En-WS', 'Es-MX', 'Et-EE', 'Fi-FI', 'El-GR',
            /// 'Fr-HT', 'He-IL', 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV',
            /// 'Lt-LT', 'Mg-MG', 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO',
            /// 'Sr-Cyrl-RS', 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH',
            /// 'To-TO', 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant'
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos or account scope search&lt;br&gt;
            /// Access token should match the authorization scope of the call - A video
            /// token (for a single video search) or account token with read
            /// permissions&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void SearchVideos(this IOperationsClient operations, string location, string accountId, string query = default(string), string textScope = default(string), string privacy = default(string), string id = default(string), string partition = default(string), string owner = default(string), string face = default(string), string externalId = default(string), int? pageSize = default(int?), int? skip = default(int?), string sourceLanguage = "English", string language = "English", string accessToken = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).SearchVideosAsync(location, accountId, query, textScope, privacy, id, partition, owner, face, externalId, pageSize, skip, sourceLanguage, language, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Search Videos
            /// </summary>
            /// Search videos in the specified account
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='query'>
            /// Free text to search for.
            /// </param>
            /// <param name='textScope'>
            /// The text scope to search in. Possible values include: 'Transcript', 'Ocr'
            /// </param>
            /// <param name='privacy'>
            /// A privacy level (Private, Organization, Public). Possible values include:
            /// 'Private', 'Public'
            /// </param>
            /// <param name='id'>
            /// A breakdown id to search for.
            /// </param>
            /// <param name='partition'>
            /// A partition to search for.
            /// </param>
            /// <param name='owner'>
            /// An owner to search for.
            /// </param>
            /// <param name='face'>
            /// A face to search for.
            /// </param>
            /// <param name='externalId'>
            /// An external id to search for (which was associated with the video at
            /// upload).
            /// </param>
            /// <param name='pageSize'>
            /// The number of results to return.
            /// </param>
            /// <param name='skip'>
            /// The number of results to skip (used for paging).
            /// </param>
            /// <param name='sourceLanguage'>
            /// Include only videos with that source language. You can specify multiple
            /// language parameters (e.g. $language=English&amp;language=French) to
            /// search multiple languages. Having no language parameter will search all
            /// languages.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN. Possible values include: 'English', 'Spanish',
            /// 'Russian', 'Japanese', 'German', 'French', 'Portuguese', 'Italian',
            /// 'Chinese', 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR',
            /// 'de-DE', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH',
            /// 'Af-ZA', 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK',
            /// 'Nl-NL', 'En-FJ', 'En-WS', 'Et-EE', 'Fi-FI', 'El-GR', 'Fr-HT', 'He-IL',
            /// 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV', 'Lt-LT', 'Mg-MG',
            /// 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO', 'Sr-Cyrl-RS',
            /// 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH', 'To-TO',
            /// 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant'
            /// </param>
            /// <param name='language'>
            /// The language to search in. You can specify multiple language parameters
            /// (e.g. $language=English&amp;language=French) to search multiple
            /// languages. Having no language parameter will search all languages.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN. Possible values include: 'English', 'Spanish',
            /// 'Russian', 'Japanese', 'German', 'French', 'Portuguese', 'Italian',
            /// 'Chinese', 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR',
            /// 'de-DE', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH',
            /// 'Af-ZA', 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK',
            /// 'Nl-NL', 'En-FJ', 'En-GB', 'En-WS', 'Es-MX', 'Et-EE', 'Fi-FI', 'El-GR',
            /// 'Fr-HT', 'He-IL', 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV',
            /// 'Lt-LT', 'Mg-MG', 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO',
            /// 'Sr-Cyrl-RS', 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH',
            /// 'To-TO', 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant'
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos or account scope search&lt;br&gt;
            /// Access token should match the authorization scope of the call - A video
            /// token (for a single video search) or account token with read
            /// permissions&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task SearchVideosAsync(this IOperationsClient operations, string location, string accountId, string query = default(string), string textScope = default(string), string privacy = default(string), string id = default(string), string partition = default(string), string owner = default(string), string face = default(string), string externalId = default(string), int? pageSize = default(int?), int? skip = default(int?), string sourceLanguage = "English", string language = "English", string accessToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.SearchVideosWithHttpMessagesAsync(location, accountId, query, textScope, privacy, id, partition, owner, face, externalId, pageSize, skip, sourceLanguage, language, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Delete Video
            /// </summary>
            /// Deletes the specified video and all related insights created from when the
            /// video was indexed
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The id of the video to delete
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Video or
            /// Account, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void DeleteVideo(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).DeleteVideoAsync(location, accountId, videoId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Video
            /// </summary>
            /// Deletes the specified video and all related insights created from when the
            /// video was indexed
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The id of the video to delete
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Video or
            /// Account, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteVideoAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.DeleteVideoWithHttpMessagesAsync(location, accountId, videoId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Re-Index Video
            /// </summary>
            /// Re-index video
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='indexingPreset'>
            /// Indexing presets:
            /// NoiseReduction - Will run an additional step of noise reduction.
            /// Audio Only - get insights from audio only.
            /// Video Only - get insights from video only.
            /// Default - Use no preset (similar to not populating the parameter).
            /// Possible values include: 'Default', 'AudioOnly', 'VideoOnly',
            /// 'DefaultWithNoiseReduction'
            /// </param>
            /// <param name='streamingPreset'>
            /// Streaming presets:
            /// Default - Single layer (similar to not sending the parameter)
            /// AdaptiveBitrate - Multiple layers based on media's framerate
            /// SingleBitrate - Single layer
            /// . Possible values include: 'Default', 'AdaptiveBitrate', 'NoStreaming',
            /// 'SingleBitrate'
            /// </param>
            /// <param name='callbackUrl'>
            /// The callback uri to call with the status once the operation completes
            /// </param>
            /// <param name='sourceLanguage'>
            /// The language to set set as the source language of the video, to be used
            /// when generating the transcript. Arabic: ar-EG, Chinese (Simplified):
            /// zh-Hans, English: en-US, French: fr-FR, German: de-DE, Italian: it-IT,
            /// Japanese: ja-JP, Portuguese: pt-BR, Russian: ru-RU, Spanish: es-ES,
            /// Korean: ko-KR, Hindi: hi-IN or Auto (automatic language detection).
            /// Possible values include: 'auto', 'English', 'Spanish', 'Russian',
            /// 'Japanese', 'German', 'French', 'Portuguese', 'Italian', 'Chinese',
            /// 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'ru-RU', 'ja-JP', 'de-DE', 'fr-FR',
            /// 'pt-BR', 'it-IT', 'zh-CN', 'hi-IN', 'ko-KR'
            /// </param>
            /// <param name='languageModelId'>
            /// LanguageModelId as appears in the LanguageModel returned by Language
            /// customization APIs
            /// </param>
            /// <param name='priority'>
            /// Index priority (Low, Normal and High). Can be used in paid regions only.
            /// Possible values include: 'Low', 'Normal', 'High'
            /// </param>
            /// <param name='personModelId'>
            /// Faces will be identified against the provided person model.
            /// </param>
            /// <param name='brandsCategories'>
            /// List of brands categories delimited by comma. Video indexer will only take
            /// these categories in to account when indexing. If not specified all brands
            /// will be used.
            /// </param>
            public static void ReIndexVideo(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken, string indexingPreset = default(string), string streamingPreset = default(string), string callbackUrl = default(string), string sourceLanguage = default(string), string languageModelId = default(string), string priority = default(string), string personModelId = default(string), string brandsCategories = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).ReIndexVideoAsync(location, accountId, videoId, accessToken, indexingPreset, streamingPreset, callbackUrl, sourceLanguage, languageModelId, priority, personModelId, brandsCategories), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Re-Index Video
            /// </summary>
            /// Re-index video
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='indexingPreset'>
            /// Indexing presets:
            /// NoiseReduction - Will run an additional step of noise reduction.
            /// Audio Only - get insights from audio only.
            /// Video Only - get insights from video only.
            /// Default - Use no preset (similar to not populating the parameter).
            /// Possible values include: 'Default', 'AudioOnly', 'VideoOnly',
            /// 'DefaultWithNoiseReduction'
            /// </param>
            /// <param name='streamingPreset'>
            /// Streaming presets:
            /// Default - Single layer (similar to not sending the parameter)
            /// AdaptiveBitrate - Multiple layers based on media's framerate
            /// SingleBitrate - Single layer
            /// . Possible values include: 'Default', 'AdaptiveBitrate', 'NoStreaming',
            /// 'SingleBitrate'
            /// </param>
            /// <param name='callbackUrl'>
            /// The callback uri to call with the status once the operation completes
            /// </param>
            /// <param name='sourceLanguage'>
            /// The language to set set as the source language of the video, to be used
            /// when generating the transcript. Arabic: ar-EG, Chinese (Simplified):
            /// zh-Hans, English: en-US, French: fr-FR, German: de-DE, Italian: it-IT,
            /// Japanese: ja-JP, Portuguese: pt-BR, Russian: ru-RU, Spanish: es-ES,
            /// Korean: ko-KR, Hindi: hi-IN or Auto (automatic language detection).
            /// Possible values include: 'auto', 'English', 'Spanish', 'Russian',
            /// 'Japanese', 'German', 'French', 'Portuguese', 'Italian', 'Chinese',
            /// 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'ru-RU', 'ja-JP', 'de-DE', 'fr-FR',
            /// 'pt-BR', 'it-IT', 'zh-CN', 'hi-IN', 'ko-KR'
            /// </param>
            /// <param name='languageModelId'>
            /// LanguageModelId as appears in the LanguageModel returned by Language
            /// customization APIs
            /// </param>
            /// <param name='priority'>
            /// Index priority (Low, Normal and High). Can be used in paid regions only.
            /// Possible values include: 'Low', 'Normal', 'High'
            /// </param>
            /// <param name='personModelId'>
            /// Faces will be identified against the provided person model.
            /// </param>
            /// <param name='brandsCategories'>
            /// List of brands categories delimited by comma. Video indexer will only take
            /// these categories in to account when indexing. If not specified all brands
            /// will be used.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ReIndexVideoAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken, string indexingPreset = default(string), string streamingPreset = default(string), string callbackUrl = default(string), string sourceLanguage = default(string), string languageModelId = default(string), string priority = default(string), string personModelId = default(string), string brandsCategories = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.ReIndexVideoWithHttpMessagesAsync(location, accountId, videoId, accessToken, indexingPreset, streamingPreset, callbackUrl, sourceLanguage, languageModelId, priority, personModelId, brandsCategories, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Update Face
            /// </summary>
            /// Update face
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='faceId'>
            /// The face id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='newName'>
            /// A name for the face
            /// </param>
            public static void UpdateFace(this IOperationsClient operations, string location, string accountId, string videoId, int faceId, string accessToken, string newName)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).UpdateFaceAsync(location, accountId, videoId, faceId, accessToken, newName), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Face
            /// </summary>
            /// Update face
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='faceId'>
            /// The face id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='newName'>
            /// A name for the face
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateFaceAsync(this IOperationsClient operations, string location, string accountId, string videoId, int faceId, string accessToken, string newName, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.UpdateFaceWithHttpMessagesAsync(location, accountId, videoId, faceId, accessToken, newName, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Update Transcript
            /// </summary>
            /// Updates the video with the given transcript.
            /// If the specified language is the source language of the video, then the
            /// video will be re-indexed with the given transcript, and the transcript of
            /// all the other languages will be re-generated.
            /// If the specified language is not the source language, the transcript of
            /// that language will be updated and the new text will be written into the
            /// existing lines and blocks of that language.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='language'>
            /// The language to search in. You can specify multiple language parameters
            /// (e.g. $language=English&amp;language=French) to search multiple
            /// languages. Having no language parameter will search all languages.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN.
            /// </param>
            /// <param name='setAsSourceLanguage'>
            /// If true the language parameter will be set as source language. Possible
            /// values include: 'true', 'false'
            /// </param>
            /// <param name='callbackUrl'>
            /// A callback url to call with the status once the operation completes
            /// </param>
            /// <param name='vttBody'>
            /// </param>
            public static void UpdateTranscript(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken, string language, string setAsSourceLanguage = "false", string callbackUrl = default(string), object vttBody = default(object))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).UpdateTranscriptAsync(location, accountId, videoId, accessToken, language, setAsSourceLanguage, callbackUrl, vttBody), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Transcript
            /// </summary>
            /// Updates the video with the given transcript.
            /// If the specified language is the source language of the video, then the
            /// video will be re-indexed with the given transcript, and the transcript of
            /// all the other languages will be re-generated.
            /// If the specified language is not the source language, the transcript of
            /// that language will be updated and the new text will be written into the
            /// existing lines and blocks of that language.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='language'>
            /// The language to search in. You can specify multiple language parameters
            /// (e.g. $language=English&amp;language=French) to search multiple
            /// languages. Having no language parameter will search all languages.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN.
            /// </param>
            /// <param name='setAsSourceLanguage'>
            /// If true the language parameter will be set as source language. Possible
            /// values include: 'true', 'false'
            /// </param>
            /// <param name='callbackUrl'>
            /// A callback url to call with the status once the operation completes
            /// </param>
            /// <param name='vttBody'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateTranscriptAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken, string language, string setAsSourceLanguage = "false", string callbackUrl = default(string), object vttBody = default(object), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.UpdateTranscriptWithHttpMessagesAsync(location, accountId, videoId, accessToken, language, setAsSourceLanguage, callbackUrl, vttBody, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Delete Video Source File
            /// </summary>
            /// Deletes only the video source file, while keeping all insights created
            /// from when the video was indexed
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Video or
            /// Account, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void DeleteVideoSourceFile(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).DeleteVideoSourceFileAsync(location, accountId, videoId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Video Source File
            /// </summary>
            /// Deletes only the video source file, while keeping all insights created
            /// from when the video was indexed
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Video or
            /// Account, with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteVideoSourceFileAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.DeleteVideoSourceFileWithHttpMessagesAsync(location, accountId, videoId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Video Source File Download Url
            /// </summary>
            /// Get video source file download url
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void GetVideoSourceFileDownloadUrl(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetVideoSourceFileDownloadUrlAsync(location, accountId, videoId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Video Source File Download Url
            /// </summary>
            /// Get video source file download url
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetVideoSourceFileDownloadUrlAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetVideoSourceFileDownloadUrlWithHttpMessagesAsync(location, accountId, videoId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Video Captions
            /// </summary>
            /// Get video captions
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='format'>
            /// The captions format (vtt, ttml, srt). Possible values include: 'vtt',
            /// 'ttml', 'srt'
            /// </param>
            /// <param name='language'>
            /// The language of the captions.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN. Possible values include: 'English', 'Spanish',
            /// 'Russian', 'Japanese', 'German', 'French', 'Portuguese', 'Italian',
            /// 'Chinese', 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR',
            /// 'de-DE', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH',
            /// 'Af-ZA', 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK',
            /// 'Nl-NL', 'En-FJ', 'En-GB', 'En-WS', 'Es-MX', 'Et-EE', 'Fi-FI', 'El-GR',
            /// 'Fr-HT', 'He-IL', 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV',
            /// 'Lt-LT', 'Mg-MG', 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO',
            /// 'Sr-Cyrl-RS', 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH',
            /// 'To-TO', 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant'
            /// </param>
            public static void GetVideoCaptions(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string), string format = "vtt", string language = "English")
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetVideoCaptionsAsync(location, accountId, videoId, accessToken, format, language), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Video Captions
            /// </summary>
            /// Get video captions
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='format'>
            /// The captions format (vtt, ttml, srt). Possible values include: 'vtt',
            /// 'ttml', 'srt'
            /// </param>
            /// <param name='language'>
            /// The language of the captions.
            /// Supported languages: Afrikaans: Af-ZA, Arabic: ar-EG, Bangla: Bn-BD,
            /// Bosnian: Bs-Latn, Bulgarian: Bg-BG, Catalan: Ca-ES, Chinese (Simplified):
            /// zh-Hans, Chinese (Traditional): Zh-Hant, Croatian: Hr-HR, Czech: Cs-CZ,
            /// Danish: Da-DK, Dutch: Nl-NL, English: en-US, Estonian: Et-EE, Fijian:
            /// En-FJ, Filipino: fil-PH, Finnish: Fi-FI, French: fr-FR, German: de-DE,
            /// Greek: El-GR, Haitian: Fr-HT, Hebrew: He-IL, Hindi: Hi-IN, Hungarian:
            /// Hu-HU, Indonesian: Id-ID, Italian: it-IT, Japanese: ja-JP, Kiswahili:
            /// Sw-KE, Korean: Ko-KR, Latvian: Lv-LV, Lithuanian: Lt-LT, Malagasy: Mg-MG,
            /// Malay: Ms-MY, Maltese: Mt-MT, Norwegian: Nb-NO, Persian: Fa-IR, Polish:
            /// Pl-PL, Portuguese: pt-BR, Romanian: Ro-RO, Russian: ru-RU, Samoan: En-WS,
            /// Serbian (Cyrillic): Sr-Cyrl-RS, Serbian (Latin): Sr-Latn-RS, Slovak:
            /// Sk-SK, Slovenian: Sl-SI, Spanish: es-ES, Swedish: Sv-SE, Tamil: Ta-IN,
            /// Thai: Th-TH, Tongan: To-TO, Turkish: Tr-TR, Ukrainian: Uk-UA, Urdu:
            /// Ur-PK, Vietnamese: Vi-VN. Possible values include: 'English', 'Spanish',
            /// 'Russian', 'Japanese', 'German', 'French', 'Portuguese', 'Italian',
            /// 'Chinese', 'Filipino', 'Arabic', 'ar-EG', 'en-US', 'es-ES', 'fr-FR',
            /// 'de-DE', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-Hans', 'fil-PH',
            /// 'Af-ZA', 'Bn-BD', 'Bs-Latn', 'Bg-BG', 'Ca-ES', 'Hr-HR', 'Cs-CZ', 'Da-DK',
            /// 'Nl-NL', 'En-FJ', 'En-GB', 'En-WS', 'Es-MX', 'Et-EE', 'Fi-FI', 'El-GR',
            /// 'Fr-HT', 'He-IL', 'Hi-IN', 'Hu-HU', 'Id-ID', 'Sw-KE', 'Ko-KR', 'Lv-LV',
            /// 'Lt-LT', 'Mg-MG', 'Ms-MY', 'Mt-MT', 'Nb-NO', 'Fa-IR', 'Pl-PL', 'Ro-RO',
            /// 'Sr-Cyrl-RS', 'Sr-Latn-RS', 'Sk-SK', 'Sl-SI', 'Sv-SE', 'Ta-IN', 'Th-TH',
            /// 'To-TO', 'Tr-TR', 'Uk-UA', 'Ur-PK', 'Vi-VN', 'Zh-Hant'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetVideoCaptionsAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string), string format = "vtt", string language = "English", CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetVideoCaptionsWithHttpMessagesAsync(location, accountId, videoId, accessToken, format, language, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Video Id by External Id
            /// </summary>
            /// Get video id by external id
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='externalId'>
            /// The external id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account
            /// with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void GetVideoIdByExternalId(this IOperationsClient operations, string location, string accountId, string externalId, string accessToken = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetVideoIdByExternalIdAsync(location, accountId, externalId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Video Id by External Id
            /// </summary>
            /// Get video id by external id
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='externalId'>
            /// The external id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account
            /// with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetVideoIdByExternalIdAsync(this IOperationsClient operations, string location, string accountId, string externalId, string accessToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetVideoIdByExternalIdWithHttpMessagesAsync(location, accountId, externalId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Thumbnail
            /// </summary>
            /// Get thumbnail of a video
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='thumbnailId'>
            /// The thumbnail id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='format'>
            /// The thumbnail format. Possible values include: 'Jpeg', 'Base64'
            /// </param>
            public static void GetThumbnail(this IOperationsClient operations, string location, string accountId, string videoId, string thumbnailId, string accessToken = default(string), string format = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetThumbnailAsync(location, accountId, videoId, thumbnailId, accessToken, format), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Thumbnail
            /// </summary>
            /// Get thumbnail of a video
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='thumbnailId'>
            /// The thumbnail id
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='format'>
            /// The thumbnail format. Possible values include: 'Jpeg', 'Base64'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetThumbnailAsync(this IOperationsClient operations, string location, string accountId, string videoId, string thumbnailId, string accessToken = default(string), string format = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetThumbnailWithHttpMessagesAsync(location, accountId, videoId, thumbnailId, accessToken, format, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Insights Widget
            /// </summary>
            /// Get insights widget
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// A video access token with permissions that correspond to allowEdit
            /// parameter
            /// </param>
            /// <param name='widgetType'>
            /// The type of widgets to include. Possible values include: 'People',
            /// 'Sentiments', 'Keywords', 'Search'
            /// </param>
            /// <param name='allowEdit'>
            /// Whether the widget allows editing of the insights. Possible values
            /// include: 'true', 'false'
            /// </param>
            public static void GetInsightsWidget(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string), string widgetType = default(string), string allowEdit = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetInsightsWidgetAsync(location, accountId, videoId, accessToken, widgetType, allowEdit), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Insights Widget
            /// </summary>
            /// Get insights widget
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// A video access token with permissions that correspond to allowEdit
            /// parameter
            /// </param>
            /// <param name='widgetType'>
            /// The type of widgets to include. Possible values include: 'People',
            /// 'Sentiments', 'Keywords', 'Search'
            /// </param>
            /// <param name='allowEdit'>
            /// Whether the widget allows editing of the insights. Possible values
            /// include: 'true', 'false'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetInsightsWidgetAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string), string widgetType = default(string), string allowEdit = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetInsightsWidgetWithHttpMessagesAsync(location, accountId, videoId, accessToken, widgetType, allowEdit, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Player Widget
            /// </summary>
            /// Get player widget
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// A video access token with read permissions
            /// </param>
            public static void GetPlayerWidget(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetPlayerWidgetAsync(location, accountId, videoId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Player Widget
            /// </summary>
            /// Get player widget
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='accessToken'>
            /// A video access token with read permissions
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetPlayerWidgetAsync(this IOperationsClient operations, string location, string accountId, string videoId, string accessToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetPlayerWidgetWithHttpMessagesAsync(location, accountId, videoId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Brands
            /// </summary>
            /// Gets all custom brands per the account and Bing brands activation state
            /// (whether Bing brands should be used when applying the model)
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void GetBrands(this IOperationsClient operations, string location, string accountId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetBrandsAsync(location, accountId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Brands
            /// </summary>
            /// Gets all custom brands per the account and Bing brands activation state
            /// (whether Bing brands should be used when applying the model)
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetBrandsAsync(this IOperationsClient operations, string location, string accountId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetBrandsWithHttpMessagesAsync(location, accountId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Create Brand
            /// </summary>
            /// Creates a new custom brand for the specified account
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='body'>
            /// A create brand request
            /// </param>
            public static void CreateBrand(this IOperationsClient operations, string location, string accountId, string accessToken, object body = default(object))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).CreateBrandAsync(location, accountId, accessToken, body), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create Brand
            /// </summary>
            /// Creates a new custom brand for the specified account
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='body'>
            /// A create brand request
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreateBrandAsync(this IOperationsClient operations, string location, string accountId, string accessToken, object body = default(object), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.CreateBrandWithHttpMessagesAsync(location, accountId, accessToken, body, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Brand
            /// </summary>
            /// Get specific brand
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='id'>
            /// The brand id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void GetBrand(this IOperationsClient operations, string location, string accountId, int id, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetBrandAsync(location, accountId, id, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Brand
            /// </summary>
            /// Get specific brand
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='id'>
            /// The brand id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetBrandAsync(this IOperationsClient operations, string location, string accountId, int id, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetBrandWithHttpMessagesAsync(location, accountId, id, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Update Brand
            /// </summary>
            /// Update Brand
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='id'>
            /// The brand id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='body'>
            /// The updated brand
            /// </param>
            public static void UpdateBrand(this IOperationsClient operations, string location, string accountId, int id, string accessToken, object body = default(object))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).UpdateBrandAsync(location, accountId, id, accessToken, body), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Brand
            /// </summary>
            /// Update Brand
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='id'>
            /// The brand id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='body'>
            /// The updated brand
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateBrandAsync(this IOperationsClient operations, string location, string accountId, int id, string accessToken, object body = default(object), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.UpdateBrandWithHttpMessagesAsync(location, accountId, id, accessToken, body, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Delete Brand
            /// </summary>
            /// Removes a brand in the specified account
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='id'>
            /// The brand id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account and
            /// Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void DeleteBrand(this IOperationsClient operations, string location, string accountId, int id, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).DeleteBrandAsync(location, accountId, id, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Brand
            /// </summary>
            /// Removes a brand in the specified account
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='id'>
            /// The brand id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account and
            /// Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteBrandAsync(this IOperationsClient operations, string location, string accountId, int id, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.DeleteBrandWithHttpMessagesAsync(location, accountId, id, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Brands Model Settings
            /// </summary>
            /// Gets the model settings which determines which brands to use
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void GetBrandsModelSettings(this IOperationsClient operations, string location, string accountId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetBrandsModelSettingsAsync(location, accountId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Brands Model Settings
            /// </summary>
            /// Gets the model settings which determines which brands to use
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetBrandsModelSettingsAsync(this IOperationsClient operations, string location, string accountId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetBrandsModelSettingsWithHttpMessagesAsync(location, accountId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Update Brands Model Settings
            /// </summary>
            /// Update the brand model settings
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='body'>
            /// The updated brand model settings
            /// </param>
            public static void UpdateBrandsModelSettings(this IOperationsClient operations, string location, string accountId, string accessToken, object body = default(object))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).UpdateBrandsModelSettingsAsync(location, accountId, accessToken, body), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Brands Model Settings
            /// </summary>
            /// Update the brand model settings
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='body'>
            /// The updated brand model settings
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task UpdateBrandsModelSettingsAsync(this IOperationsClient operations, string location, string accountId, string accessToken, object body = default(object), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.UpdateBrandsModelSettingsWithHttpMessagesAsync(location, accountId, accessToken, body, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Create Language Model
            /// </summary>
            /// Creates a language model.
            /// There are two ways to upload files in the body using form-data.
            /// 1. Key will be the file name and value will be the file.
            /// 2. Key will be the file name and value will be a URL to txt file.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account and
            /// Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelName'>
            /// Model name
            /// </param>
            /// <param name='language'>
            /// Model language. Possible values include: 'en-US', 'ar-EG', 'de-DE',
            /// 'es-ES', 'fr-FR', 'hi-HI', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-CN'
            /// </param>
            public static void CreateLanguageModel(this IOperationsClient operations, string location, string accountId, string accessToken, string modelName, string language)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).CreateLanguageModelAsync(location, accountId, accessToken, modelName, language), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create Language Model
            /// </summary>
            /// Creates a language model.
            /// There are two ways to upload files in the body using form-data.
            /// 1. Key will be the file name and value will be the file.
            /// 2. Key will be the file name and value will be a URL to txt file.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account and
            /// Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelName'>
            /// Model name
            /// </param>
            /// <param name='language'>
            /// Model language. Possible values include: 'en-US', 'ar-EG', 'de-DE',
            /// 'es-ES', 'fr-FR', 'hi-HI', 'it-IT', 'ja-JP', 'pt-BR', 'ru-RU', 'zh-CN'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreateLanguageModelAsync(this IOperationsClient operations, string location, string accountId, string accessToken, string modelName, string language, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.CreateLanguageModelWithHttpMessagesAsync(location, accountId, accessToken, modelName, language, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Language Models
            /// </summary>
            /// Get language models
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void FiveaeFivebFourNineSevenNineeSixecbdThreeZerofaaSixfSevenFive(this IOperationsClient operations, string location, string accountId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebFourNineSevenNineeSixecbdThreeZerofaaSixfSevenFiveAsync(location, accountId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Language Models
            /// </summary>
            /// Get language models
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebFourNineSevenNineeSixecbdThreeZerofaaSixfSevenFiveAsync(this IOperationsClient operations, string location, string accountId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebFourNineSevenNineeSixecbdThreeZerofaaSixfSevenFiveWithHttpMessagesAsync(location, accountId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Update Language Model
            /// </summary>
            /// Updates a language model.
            /// 
            /// There are two ways to upload files in the body using form-data.
            /// 1. Key will be the file name and value will be the file.
            /// 2. Key will be the file name and value will be a URL to txt file.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelName'>
            /// Model name
            /// </param>
            /// <param name='enable'>
            /// Enable / Disable all files under the model. Possible values include:
            /// 'true', 'false'
            /// </param>
            public static void FiveaeFivebThreeceEightFivefFourSixEightFourTwoFourZerobdbSevenEightf(this IOperationsClient operations, string location, string accountId, string modelId, string accessToken, string modelName = default(string), string enable = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebThreeceEightFivefFourSixEightFourTwoFourZerobdbSevenEightfAsync(location, accountId, modelId, accessToken, modelName, enable), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Language Model
            /// </summary>
            /// Updates a language model.
            /// 
            /// There are two ways to upload files in the body using form-data.
            /// 1. Key will be the file name and value will be the file.
            /// 2. Key will be the file name and value will be a URL to txt file.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelName'>
            /// Model name
            /// </param>
            /// <param name='enable'>
            /// Enable / Disable all files under the model. Possible values include:
            /// 'true', 'false'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebThreeceEightFivefFourSixEightFourTwoFourZerobdbSevenEightfAsync(this IOperationsClient operations, string location, string accountId, string modelId, string accessToken, string modelName = default(string), string enable = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebThreeceEightFivefFourSixEightFourTwoFourZerobdbSevenEightfWithHttpMessagesAsync(location, accountId, modelId, accessToken, modelName, enable, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Language Model
            /// </summary>
            /// Get language model
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void FiveaeFivebFourfcbdNinebFourThreeSevendTwoSevendFiveThreefOneSix(this IOperationsClient operations, string location, string accountId, string modelId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebFourfcbdNinebFourThreeSevendTwoSevendFiveThreefOneSixAsync(location, accountId, modelId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Language Model
            /// </summary>
            /// Get language model
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebFourfcbdNinebFourThreeSevendTwoSevendFiveThreefOneSixAsync(this IOperationsClient operations, string location, string accountId, string modelId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebFourfcbdNinebFourThreeSevendTwoSevendFiveThreefOneSixWithHttpMessagesAsync(location, accountId, modelId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Delete Language Model
            /// </summary>
            /// Delete language model
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account and
            /// Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void FiveaeFivebaFiveThreeSevenEightTwoSixZeroSixeNineOnefSixFivebeNined(this IOperationsClient operations, string location, string accountId, string modelId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebaFiveThreeSevenEightTwoSixZeroSixeNineOnefSixFivebeNinedAsync(location, accountId, modelId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Language Model
            /// </summary>
            /// Delete language model
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account and
            /// Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebaFiveThreeSevenEightTwoSixZeroSixeNineOnefSixFivebeNinedAsync(this IOperationsClient operations, string location, string accountId, string modelId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebaFiveThreeSevenEightTwoSixZeroSixeNineOnefSixFivebeNinedWithHttpMessagesAsync(location, accountId, modelId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Delete Language Model file
            /// </summary>
            /// Delete language model file
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='fileId'>
            /// File id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account and
            /// Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void FiveaeFivebFiveSevenbFivedeFiveOneeSixFoureeFiveTwoTwoFourTwoe(this IOperationsClient operations, string location, string accountId, string modelId, string fileId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebFiveSevenbFivedeFiveOneeSixFoureeFiveTwoTwoFourTwoeAsync(location, accountId, modelId, fileId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Language Model file
            /// </summary>
            /// Delete language model file
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='fileId'>
            /// File id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account and
            /// Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebFiveSevenbFivedeFiveOneeSixFoureeFiveTwoTwoFourTwoeAsync(this IOperationsClient operations, string location, string accountId, string modelId, string fileId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebFiveSevenbFivedeFiveOneeSixFoureeFiveTwoTwoFourTwoeWithHttpMessagesAsync(location, accountId, modelId, fileId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Update Language Model file
            /// </summary>
            /// Update a language model file name or state
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='fileId'>
            /// File id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='fileName'>
            /// File name
            /// </param>
            /// <param name='enable'>
            /// Enable. Possible values include: 'true', 'false'
            /// </param>
            public static void FiveaeFivebSixZeroFiveFourSevenfThreeThreecOnecTwobTwodOneThreeSevenFive(this IOperationsClient operations, string location, string accountId, string modelId, string fileId, string accessToken, string fileName = default(string), string enable = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebSixZeroFiveFourSevenfThreeThreecOnecTwobTwodOneThreeSevenFiveAsync(location, accountId, modelId, fileId, accessToken, fileName, enable), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Update Language Model file
            /// </summary>
            /// Update a language model file name or state
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='fileId'>
            /// File id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='fileName'>
            /// File name
            /// </param>
            /// <param name='enable'>
            /// Enable. Possible values include: 'true', 'false'
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebSixZeroFiveFourSevenfThreeThreecOnecTwobTwodOneThreeSevenFiveAsync(this IOperationsClient operations, string location, string accountId, string modelId, string fileId, string accessToken, string fileName = default(string), string enable = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebSixZeroFiveFourSevenfThreeThreecOnecTwobTwodOneThreeSevenFiveWithHttpMessagesAsync(location, accountId, modelId, fileId, accessToken, fileName, enable, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Language Model file data
            /// </summary>
            /// Get language model file data and metadata
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='fileId'>
            /// File id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void FiveaeFivebSevenThreefNineeSixFourOneSixdSevenaNineNineSixFivebFourTwo(this IOperationsClient operations, string location, string accountId, string modelId, string fileId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebSevenThreefNineeSixFourOneSixdSevenaNineNineSixFivebFourTwoAsync(location, accountId, modelId, fileId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Language Model file data
            /// </summary>
            /// Get language model file data and metadata
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='fileId'>
            /// File id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebSevenThreefNineeSixFourOneSixdSevenaNineNineSixFivebFourTwoAsync(this IOperationsClient operations, string location, string accountId, string modelId, string fileId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebSevenThreefNineeSixFourOneSixdSevenaNineNineSixFivebFourTwoWithHttpMessagesAsync(location, accountId, modelId, fileId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Download Language Model file content
            /// </summary>
            /// Downlaod language model file content
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='fileId'>
            /// File id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void FiveaeFivebNineNineeFiveTwoTwocbFourSevenbdNineSixSevenNineOneTwoTwo(this IOperationsClient operations, string location, string accountId, string modelId, string fileId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebNineNineeFiveTwoTwocbFourSevenbdNineSixSevenNineOneTwoTwoAsync(location, accountId, modelId, fileId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Download Language Model file content
            /// </summary>
            /// Downlaod language model file content
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='fileId'>
            /// File id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account
            /// Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebNineNineeFiveTwoTwocbFourSevenbdNineSixSevenNineOneTwoTwoAsync(this IOperationsClient operations, string location, string accountId, string modelId, string fileId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebNineNineeFiveTwoTwocbFourSevenbdNineSixSevenNineOneTwoTwoWithHttpMessagesAsync(location, accountId, modelId, fileId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Train Language Model
            /// </summary>
            /// Train the language model based on the enabled files
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account,
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void FiveaeFivebacThreecfSevenSixOneSevenSevenNineaSixcTwoabTwoSeven(this IOperationsClient operations, string location, string accountId, string modelId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).FiveaeFivebacThreecfSevenSixOneSevenSevenNineaSixcTwoabTwoSevenAsync(location, accountId, modelId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Train Language Model
            /// </summary>
            /// Train the language model based on the enabled files
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;
            /// . Possible values include: 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='modelId'>
            /// Model id
            /// </param>
            /// <param name='accessToken'>
            /// Access token should match the authorization scope of the call (Account,
            /// with Write)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task FiveaeFivebacThreecfSevenSixOneSevenSevenNineaSixcTwoabTwoSevenAsync(this IOperationsClient operations, string location, string accountId, string modelId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.FiveaeFivebacThreecfSevenSixOneSevenSevenNineaSixcTwoabTwoSevenWithHttpMessagesAsync(location, accountId, modelId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Video Artifact Download Url
            /// </summary>
            /// Get video artifact download url
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='type'>
            /// The artifact type to get. Possible values include: 'Ocr', 'Faces',
            /// 'FacesThumbnails', 'VisualContentModeration', 'KeyframesThumbnails',
            /// 'LanguageDetection', 'Metadata', 'Emotions', 'TextualContentModeration'
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            public static void GetVideoArtifactDownloadUrl(this IOperationsClient operations, string location, string accountId, string videoId, string type, string accessToken = default(string))
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetVideoArtifactDownloadUrlAsync(location, accountId, videoId, type, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Video Artifact Download Url
            /// </summary>
            /// Get video artifact download url
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include:
            /// 'northeurope', 'westus2', 'eastasia', 'trial'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='videoId'>
            /// The video id
            /// </param>
            /// <param name='type'>
            /// The artifact type to get. Possible values include: 'Ocr', 'Faces',
            /// 'FacesThumbnails', 'VisualContentModeration', 'KeyframesThumbnails',
            /// 'LanguageDetection', 'Metadata', 'Emotions', 'TextualContentModeration'
            /// </param>
            /// <param name='accessToken'>
            /// Required for private videos&lt;br&gt;
            /// Access token should match the authorization scope of the call (Account or
            /// Video, with Read)&lt;br&gt;
            /// Note that Access tokens expire within 1 hour&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accesstoken
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetVideoArtifactDownloadUrlAsync(this IOperationsClient operations, string location, string accountId, string videoId, string type, string accessToken = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetVideoArtifactDownloadUrlWithHttpMessagesAsync(location, accountId, videoId, type, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Create Person Model
            /// </summary>
            /// Creates a new person model in the specified account.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include: 'trial',
            /// 'northeurope', 'eastasia', 'westus2'
            /// </param>
            /// <param name='accountId'>
            /// Format - uuid. Account ID is a globally unique identifier (GUID) for the
            /// account.&lt;br&gt; See more details &lt;a
            /// href=https://aka.ms/vi-docs-accountid target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='name'>
            /// The person model name.
            /// </param>
            /// <param name='accessToken'>
            /// An account access token with write permissions.&lt;br&gt;Note that Access
            /// tokens expire within 1 hour.&lt;br&gt;See more details &lt;a
            /// href=https://aka.ms/vi-docs-accesstoken target="_blank"&gt;here&lt;/a&gt;.
            /// </param>
            public static void CreatePersonModel(this IOperationsClient operations, string location, string accountId, string name, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).CreatePersonModelAsync(location, accountId, name, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create Person Model
            /// </summary>
            /// Creates a new person model in the specified account.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include: 'trial',
            /// 'northeurope', 'eastasia', 'westus2'
            /// </param>
            /// <param name='accountId'>
            /// Format - uuid. Account ID is a globally unique identifier (GUID) for the
            /// account.&lt;br&gt; See more details &lt;a
            /// href=https://aka.ms/vi-docs-accountid target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='name'>
            /// The person model name.
            /// </param>
            /// <param name='accessToken'>
            /// An account access token with write permissions.&lt;br&gt;Note that Access
            /// tokens expire within 1 hour.&lt;br&gt;See more details &lt;a
            /// href=https://aka.ms/vi-docs-accesstoken target="_blank"&gt;here&lt;/a&gt;.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task CreatePersonModelAsync(this IOperationsClient operations, string location, string accountId, string name, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.CreatePersonModelWithHttpMessagesAsync(location, accountId, name, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Get Person Models
            /// </summary>
            /// Gets all person models in the account.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include: 'trial',
            /// 'northeurope', 'eastasia', 'westus2'
            /// </param>
            /// <param name='accountId'>
            /// Format - uuid. Account ID is a globally unique identifier (GUID) for the
            /// account.&lt;br&gt; See more details &lt;a
            /// href=https://aka.ms/vi-docs-accountid target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// An account access token with read permissions.&lt;br&gt;Note that Access
            /// tokens expire within 1 hour.&lt;br&gt;See more details &lt;a
            /// href=https://aka.ms/vi-docs-accesstoken target="_blank"&gt;here&lt;/a&gt;.
            /// </param>
            public static void GetPersonModels(this IOperationsClient operations, string location, string accountId, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).GetPersonModelsAsync(location, accountId, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get Person Models
            /// </summary>
            /// Gets all person models in the account.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-location
            /// target="_blank"&gt;here&lt;/a&gt;. Possible values include: 'trial',
            /// 'northeurope', 'eastasia', 'westus2'
            /// </param>
            /// <param name='accountId'>
            /// Format - uuid. Account ID is a globally unique identifier (GUID) for the
            /// account.&lt;br&gt; See more details &lt;a
            /// href=https://aka.ms/vi-docs-accountid target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='accessToken'>
            /// An account access token with read permissions.&lt;br&gt;Note that Access
            /// tokens expire within 1 hour.&lt;br&gt;See more details &lt;a
            /// href=https://aka.ms/vi-docs-accesstoken target="_blank"&gt;here&lt;/a&gt;.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task GetPersonModelsAsync(this IOperationsClient operations, string location, string accountId, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.GetPersonModelsWithHttpMessagesAsync(location, accountId, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

            /// <summary>
            /// Delete Person Model
            /// </summary>
            /// Deletes the given person model.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;See more details &lt;a
            /// href=https://aka.ms/vi-docs-location target="_blank"&gt;here&lt;/a&gt;.
            /// Possible values include: 'trial', 'northeurope', 'eastasia', 'westus2'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='id'>
            /// The person model id
            /// </param>
            /// <param name='accessToken'>
            /// An account access token with write permissions.&lt;br&gt;Note that Access
            /// tokens expire within 1 hour.&lt;br&gt;See more details &lt;a
            /// href=https://aka.ms/vi-docs-accesstoken target="_blank"&gt;here&lt;/a&gt;.
            /// </param>
            public static void DeletePersonModel(this IOperationsClient operations, string location, string accountId, string id, string accessToken)
            {
                Task.Factory.StartNew(s => ((IOperationsClient)s).DeletePersonModelAsync(location, accountId, id, accessToken), operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete Person Model
            /// </summary>
            /// Deletes the given person model.
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='location'>
            /// Location indicates the Azure region to which the call should be
            /// routed&lt;br&gt;See more details &lt;a
            /// href=https://aka.ms/vi-docs-location target="_blank"&gt;here&lt;/a&gt;.
            /// Possible values include: 'trial', 'northeurope', 'eastasia', 'westus2'
            /// </param>
            /// <param name='accountId'>
            /// Account ID is a globally unique identifier (GUID) for the account&lt;br&gt;
            /// See more details &lt;a href=https://aka.ms/vi-docs-accountid
            /// target="_blank"&gt;here&lt;/a&gt;
            /// </param>
            /// <param name='id'>
            /// The person model id
            /// </param>
            /// <param name='accessToken'>
            /// An account access token with write permissions.&lt;br&gt;Note that Access
            /// tokens expire within 1 hour.&lt;br&gt;See more details &lt;a
            /// href=https://aka.ms/vi-docs-accesstoken target="_blank"&gt;here&lt;/a&gt;.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeletePersonModelAsync(this IOperationsClient operations, string location, string accountId, string id, string accessToken, CancellationToken cancellationToken = default(CancellationToken))
            {
                await operations.DeletePersonModelWithHttpMessagesAsync(location, accountId, id, accessToken, null, cancellationToken).ConfigureAwait(false);
            }

    }
}
