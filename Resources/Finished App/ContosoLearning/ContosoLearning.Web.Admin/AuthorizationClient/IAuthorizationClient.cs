// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ContosoLearning.Web.Admin.VideoIndexer.Authorization
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Newtonsoft.Json;
    using Microsoft.Rest;

    /// <summary>
    /// The Authorization API is used to obtain access tokens for calling the
    /// Operations API
    /// </summary>
    public partial interface IAuthorizationClient : IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


            /// <summary>
        /// Get Video Access Token
        /// </summary>
        /// Gets a video access token
        /// <param name='location'>
        /// Location. Possible values include: 'trial', 'westus2',
        /// 'northeurope', 'eastasia'
        /// </param>
        /// <param name='accountId'>
        /// The account id
        /// </param>
        /// <param name='videoId'>
        /// The video id
        /// </param>
        /// <param name='allowEdit'>
        /// Determines whether the token has write permissions
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> GetVideoAccessTokenWithHttpMessagesAsync(string location, string accountId, string videoId, bool? allowEdit = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get User Access Token
        /// </summary>
        /// Gets a user access token
        /// <param name='location'>
        /// Location. Possible values include: 'trial', 'westus2',
        /// 'northeurope', 'eastasia'
        /// </param>
        /// <param name='allowEdit'>
        /// Determines whether the token has write permissions
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> GetUserAccessTokenWithHttpMessagesAsync(string location, bool? allowEdit = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get Account Access Token
        /// </summary>
        /// Gets an account access token
        /// <param name='location'>
        /// Location. Possible values include: 'trial', 'westus2',
        /// 'northeurope', 'eastasia'
        /// </param>
        /// <param name='accountId'>
        /// The account id
        /// </param>
        /// <param name='allowEdit'>
        /// Determines whether the token has write permissions
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> GetAccountAccessTokenWithHttpMessagesAsync(string location, string accountId, bool? allowEdit = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get Accounts
        /// </summary>
        /// Get Accounts
        /// <param name='location'>
        /// Location. Possible values include: 'northeurope', 'westus2',
        /// 'eastasia', 'trial'
        /// </param>
        /// <param name='generateAccessTokens'>
        /// Whether to generate an access token for each account. Possible
        /// values include: 'true', 'false'
        /// </param>
        /// <param name='allowEdit'>
        /// Whether the tokens have write permissions. Possible values
        /// include: 'true', 'false'
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> GetAccountsWithHttpMessagesAsync(string location, string generateAccessTokens = default(string), string allowEdit = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
